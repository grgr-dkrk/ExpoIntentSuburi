diff --git a/node_modules/expo-intent-launcher/android/src/main/java/expo/modules/intentlauncher/IntentLauncherModule.kt b/node_modules/expo-intent-launcher/android/src/main/java/expo/modules/intentlauncher/IntentLauncherModule.kt
index dd40e8d..d8f1f4b 100644
--- a/node_modules/expo-intent-launcher/android/src/main/java/expo/modules/intentlauncher/IntentLauncherModule.kt
+++ b/node_modules/expo-intent-launcher/android/src/main/java/expo/modules/intentlauncher/IntentLauncherModule.kt
@@ -13,6 +13,10 @@ import expo.modules.kotlin.exception.toCodedException
 import expo.modules.kotlin.modules.Module
 import expo.modules.kotlin.modules.ModuleDefinition
 
+import java.text.SimpleDateFormat
+import java.util.Locale
+import java.util.TimeZone
+
 private const val REQUEST_CODE = 12
 private const val ATTR_EXTRA = "extra"
 private const val ATTR_DATA = "data"
@@ -53,12 +57,29 @@ class IntentLauncherModule : Module() {
         }
       }
 
+      // Starting from here, a patch is applied. If there is a key ending with `_dateString` and its value is a string following the `yyyy-MM-dd HH:mm` format, the value is converted to `Long`.
       params.extra?.let {
-        val valuesList = it.mapValues { (_, value) ->
-          if (value is Double) value.toInt() else value
-        }
+        val dateFormat = SimpleDateFormat("yyyy-MM-dd HH:mm", Locale.US)
+
+        val valuesList = it.flatMap { (key, value) ->
+          when {
+            key.endsWith("_dateString") && value is String -> {
+              val newKey = key.removeSuffix("_dateString")
+              val timestamp = try {
+                dateFormat.parse(value)?.time
+              } catch (e: Exception) {
+                null
+              }
+              if (timestamp != null) listOf(newKey to timestamp) else listOf(newKey to value)
+            }
+            value is Double -> listOf(key to value.toInt())
+            else -> listOf(key to value)
+          }
+        }.toMap()
+
         intent.putExtras(valuesList.toBundle())
       }
+      // The patch is applied up to this point.
       params.flags?.let { intent.addFlags(it) }
       params.category?.let { intent.addCategory(it) }
 
@@ -70,6 +91,7 @@ class IntentLauncherModule : Module() {
       }
     }
     
+
     OnActivityResult { _, payload ->
       if (payload.requestCode != REQUEST_CODE) {
         return@OnActivityResult
